#! /usr/bin/env bash

function usage() {
  echo "usage: elapsed -d <description> -l <logfile> -c <command>"
}

function check_already_specified() {
  if [ -n "${!1}" ]; then
    echo "elapsed: option already specified -- $opt"
    usage
    exit 4
  fi
}

function check_required() {
  if [ -z "${!2}" ]; then
    echo "elapsed: required option not specified -- $1"
    usage
    exit 5
  fi
}

while getopts ":d:l:c:h" opt; do
  case $opt in
  d)
    check_already_specified 'description'
    description=$OPTARG
    ;;
  l)
    check_already_specified 'logfile'
    logfile=$OPTARG
    ;;
  c)
    check_already_specified 'command'
    IFS=" " read -r command command_args <<< "$OPTARG"
    ;;
  h)
    usage
    exit 0
    ;;
  :)
    echo "elapsed: option requires an argument -- $OPTARG"
    usage
    exit 3
    ;;
  \?)
    echo "elapsed: invalid option -- $OPTARG"
    usage
    exit 1
    ;;
  *)
    echo "elapsed: invalid option -- $OPTARG"
    usage
    exit 2
    ;;
  esac
done

# if all arguments parsed, $OPTIND is one more than $#
if [ $OPTIND -lt $# ] || [ $OPTIND -eq $# ]; then
  echo "elapsed: unexpected trailing options (did you quote arguments correctly?): ${*:$OPTIND}"
  usage
  exit 7
fi

check_required 'd' 'description'
check_required 'l' 'logfile'
check_required 'c' 'command'

echo "-----elapsed-----" | tee -a "$logfile"
current_time=$(date "+%Y-%m-%d %H:%M:%S")
echo "Started '$description' at $current_time" | tee -a "$logfile"
echo "Executing command '$command $command_args'" | tee -a "$logfile"
echo "-----elapsed-----" | tee -a "$logfile"

if [ -n "$command_args" ]; then
  echo "$command_args" | xargs "$command" 2>&1 | tee -a "$logfile"
else
  "$command" 2>&1 | tee -a "$logfile"
fi

exit_code=${PIPESTATUS[0]}

echo "-----elapsed-----" | tee -a "$logfile"
current_time=$(date "+%Y-%m-%d %H:%M:%S")
echo "Finished '$description' at $current_time with exit code $exit_code" | tee -a "$logfile"
echo "-----elapsed-----" | tee -a "$logfile"
